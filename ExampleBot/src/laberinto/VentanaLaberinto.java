package laberinto;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class VentanaLaberinto extends javax.swing.JFrame {
	
	//Variables creadas por mí, para generar la ventana
    public static final int xboton = 30; //ancho y alto de las celdas
    public static final int yboton = 30;
    public static final int xInicio = 150; //posicio de comienzo del tablero
    public static final int yInicio = 50;
    
    private Casilla tablero[][]; //arraylist de JButtons para crear el tablero
    private Casilla salida;
    private Casilla meta;   
    
    private QLearning q; //guarda la referencia a toda la estructura del ejercicio
    
    int maxX = 15; //casillas máximas en horizontal y vertical
    int maxY = 15;
    
    // Variables declaration - do not modify
    private javax.swing.JButton btEmpezar;
    private javax.swing.JLabel lbPaso;
    // End of variables declaration
	
    public VentanaLaberinto() {
        initComponents();

    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {

        btEmpezar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btEmpezar.setText("Empezar");
        btEmpezar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEmpezarActionPerformed(evt);
            }
        });
        btEmpezar.setBounds(10, 10, 105, 35);
        btEmpezar.setVisible(true);
        this.add(btEmpezar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        
        this.setSize(800, 600);
        
        generarLaberinto();
        
    }

    
    private void btEmpezarActionPerformed(java.awt.event.ActionEvent evt) {
        btEmpezar.setEnabled(false);
        q.aprendeLaberinto(100);
        q.buscaMejorCamino();
    }


    private void generarLaberinto() {

        tablero = new Casilla [maxX][maxY];
        
        /* Inicializa las casillas visualmente y las aÃ±ade a la ventana*/
        for(int i = 0; i < maxX ; i++)
        {
            for(int j = 0; j < maxY;j++)
            {
                tablero[i][j] = new Casilla(i,j);
                tablero[i][j].setBounds(xboton*i+xInicio, yboton*j+yInicio, xboton, yboton);
                tablero[i][j].setVisible(true);
                tablero[i][j].setBackground(Color.WHITE);              
                this.add(tablero[i][j]);
                tablero[i][j].addActionListener(new ActionListener() 
                {
                    public void actionPerformed(ActionEvent e) {
                        Casilla c = (Casilla)e.getSource();
                        System.out.println(c.getText());
                    }
                });
            }
        }
        
        //AÑADE LA SALIDA; META Y PAREDES
        salida = tablero[0][0];
        setSalida(salida);
        
        meta = tablero[maxX-1][maxY-1];
        setMeta(meta);
        
        for(int y=0; y<maxY-2; y++)
        {
            setPared(tablero[1][y]);
        }
        for(int x=1; x<=maxY-1; x++)
        {
            setPared(tablero[x][maxY-2]);
        }
        
        q = new QLearning(tablero, salida, meta, maxX, maxY); //INICIALIZA LA ESTRUCTURA PARA EL ALGORITMO
        
        repaint();
    }
    
    
    public void setSalida(Casilla salida)
    {
    	salida.setInicio();
    	salida.setBackground(Color.blue);
        
        this.repaint();
    }
    
    
    public void setMeta(Casilla meta)
    {
    	meta.setMeta();
    	meta.setBackground(Color.green);
        
        this.repaint();
    }
    

    public void setPared(Casilla pared)
    {    
    	pared.setPared(true);
    	pared.setBackground(Color.black);
       
        this.repaint();
    }
	
	
    public Casilla getCasilla(int x, int y)
    {
        return this.tablero[x][y];
    }

}
